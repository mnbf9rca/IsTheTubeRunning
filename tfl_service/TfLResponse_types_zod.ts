// Generated by ts-to-zod
import { z } from "zod";

export const tfLResponsePassengerFlowSchema = z.object({
  timeSlice: z.string().optional(),
  value: z.number().optional(),
});

export const tfLResponseTrainLoadingSchema = z.object({
  line: z.string(),
  lineDirection: z.string(),
  platformDirection: z.string(),
  direction: z.string(),
  naptanTo: z.string(),
  timeSlice: z.string(),
  value: z.number(),
});

export const tfLResponseOrderedRouteSchema = z.object({
  name: z.string(),
  naptanIds: z.array(z.string()),
  serviceType: z.string(),
});

export const tfLResponseCrowdingSchema = z.object({
  passengerFlows: z.array(tfLResponsePassengerFlowSchema).optional(),
  trainLoadings: z.array(tfLResponseTrainLoadingSchema).optional(),
});

export const tfLResponseIdentifierSchema = z.object({
  id: z.string(),
  name: z.string(),
  uri: z.string(),
  fullName: z.string().optional(),
  type: z.string(),
  crowding: tfLResponseCrowdingSchema.optional(),
  routeType: z.string(),
  status: z.string(),
});

export const tfLResponseMatchedStopSchema = z.object({
  routeId: z.number().optional(),
  parentId: z.string().optional(),
  stationId: z.string().optional(),
  icsId: z.string(),
  topMostParentId: z.string().optional(),
  direction: z.string().optional(),
  towards: z.string().optional(),
  modes: z.array(z.string()),
  stopType: z.string(),
  stopLetter: z.string().optional(),
  zone: z.string(),
  accessibilitySummary: z.string().optional(),
  hasDisruption: z.boolean().optional(),
  lines: z.array(tfLResponseIdentifierSchema),
  status: z.boolean().optional(),
  id: z.string(),
  url: z.string().optional(),
  name: z.string(),
  lat: z.number(),
  lon: z.number(),
});

export const tfLResponseStopPointSequenceSchema = z.object({
  lineId: z.string(),
  lineName: z.string(),
  direction: z.string(),
  branchId: z.number(),
  nextBranchIds: z.array(z.number()),
  prevBranchIds: z.array(z.number()),
  stopPoint: z.array(tfLResponseMatchedStopSchema),
  serviceType: z.union([z.literal("Regular"), z.literal("Night")]),
});

export const tfLResponseRouteSequenceSchema = z.object({
  lineId: z.string(),
  lineName: z.string(),
  direction: z.string(),
  isOutboundOnly: z.boolean(),
  mode: z.string(),
  lineStrings: z.array(z.string()),
  stations: z.array(tfLResponseMatchedStopSchema),
  stopPointSequences: z.array(tfLResponseStopPointSequenceSchema),
  orderedLineRoutes: z.array(tfLResponseOrderedRouteSchema),
});
